#primera vez para instalar todo

docker-compose run --rm app bash

# luego con todo instalado usar up

docker-compose up --rm app bash

#para ver modulos instalados

pip freeze

# ver version de python


python --version

# crear proyecto nuevo

django-admin startproject eventbook

# migrar la base de datos

./manage.py migrate

docker-compose run --rm app ./manage.py check
docker-compose run --rm app ./manage.py makemigrations
docker-compose run --rm app ./manage.py migrate
docker-compose run --rm app ./manage.py createsuperuser
docker-compose run --rm app ./manage.py shell
(python manage.py shell)
>>> from users.models import User
>>> u = User.objects.all()[0]
>>> u.set_password("newPassword")
>>> u.save()
>>> u.get_absolute_url()
# '/users/1/'

****** CREAR NUEVA app
python manage.py startapp portal




# EJECUTAR PROYECTO el archivo manage.py debe estar en el root
docker-compose up

# ejecutar el proyecto

**** RECREAR CONTENEDORES y USUARIOS ADMINS
docker-compose -f docker-compose.yaml up

generar 
docker-compose build --no-cache

#### GIT


git add .
git commit -m "Seteo inicial"
git remote add origin https://github.com/pabloaronna/GH_tempEB.git
git push -u origin master

git status
git log

git checkout <nombre de archivo> lo vuelve al estado anterior
git diff  <nombre de archivo>  me da los cambios que tiene

DOCKER

docker
 images
 rmi
 stop
 ps
 kill
 build


docker-compose 
 run
 up
 down
 
docker rmi [ID]  --force 

problemar para volver a arrancar al siguiente dia de trabajo - 

docker-compose up --force-recreate --remove-orphans

ELIMINAR TODO!!
  docker-compose down
  docker system prune
  docker kill $(docker ps -q) # stop all containers
  docker rm $(docker ps -a -q) -f # remove all containers 
  docker rmi $(docker images -q) # remove all images
  docker network prune # remove all networks
  docker volume prune # remove all volumes 
  docker volume rm $(docker volume ls -q)
  docker rm -f -v postgres_container_name

  




